{"version":3,"sources":["components/addToDo/AddTodo.module.css","components/header/Header.module.css","components/addToDo/AddTodo.js","components/header/Header.js","components/ToDoList/TodoList.js","App.js","index.js","components/ToDoList/TodoList.module.css"],"names":["module","exports","AddTodo","props","useState","value","setValue","Row","Col","className","css","addTodoForm","Form","Control","size","placeholder","onChange","e","target","Button","btn","variant","onClick","setTodo","todo","id","uuidv4","title","status","Header","root","TodoList","edit","setEdit","filter","setFilter","useEffect","todoFilter","newTodo","item","ButtonGroup","btns","map","listItems","close","saveTodo","icon","faSave","deleteTodo","faTrashAlt","statusTodo","faLockOpen","faLock","faEdit","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8485b464.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTodoForm\":\"AddTodo_addTodoForm__3jI65\",\"btn\":\"AddTodo_btn__1Ogr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__37U9n\"};","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport css from './AddTodo.module.css';\r\nexport const AddTodo = (props) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const saveTodo = () => {\r\n    if (value) {\r\n      return props.setTodo(\r\n        [\r\n          ...props.todo,\r\n          {\r\n            id: uuidv4(),\r\n            title: value,\r\n            status: true,\r\n          },\r\n        ],\r\n        setValue(''),\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col className={css.addTodoForm}>\r\n        <Form.Control\r\n          size='sm'\r\n          placeholder='Enter task'\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n        />\r\n        <Button className={css.btn} variant='info' onClick={saveTodo}>\r\n          Save\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import { Col, Row } from 'react-bootstrap';\r\nimport css from './Header.module.css';\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <div className={css.root}>Todo list</div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Button, ButtonGroup, Col, Form, Row } from 'react-bootstrap';\r\nimport css from './TodoList.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faSave,\r\n  faEdit,\r\n  faTrashAlt,\r\n  faLock,\r\n  faLockOpen,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const TodoList = (props) => {\r\n  const [edit, setEdit] = useState(null);\r\n  const [value, setValue] = useState('');\r\n  const [filter, setFilter] = useState(props.todo);\r\n  useEffect(() => {\r\n    setFilter(props.todo);\r\n  }, [props.todo]);\r\n\r\n  const deleteTodo = (id) => {\r\n    let newTodo = [...props.todo].filter((item) => item.id !== id);\r\n    props.setTodo(newTodo);\r\n  };\r\n\r\n  const statusTodo = (id) => {\r\n    let newTodo = [...props.todo].filter((item) => {\r\n      if (item.id === id) {\r\n        item.status = !item.status;\r\n      }\r\n      return item; //возращает оставшиеся элементы массива\r\n    });\r\n    props.setTodo(newTodo);\r\n  };\r\n\r\n  const saveTodo = (id) => {\r\n    let newTodo = [...props.todo].map((item) => {\r\n      if (item.id === id) {\r\n        item.title = value;\r\n      }\r\n      return item;\r\n    });\r\n    props.setTodo(newTodo);\r\n    setEdit(null);\r\n  };\r\n\r\n  const editTodo = (id, title) => {\r\n    setEdit(id); // Записываем в edit наш Id\r\n    setValue(title);\r\n  };\r\n\r\n  const todoFilter = (status) => {\r\n    if (status === 'all') {\r\n      setFilter(props.todo);\r\n    } else {\r\n      let newTodo = [...props.todo].filter((item) => item.status === status);\r\n      setFilter(newTodo);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col className={css.filter}>\r\n          <ButtonGroup className={css.btns} aria-label='Basic example'>\r\n            <Button onClick={() => todoFilter('all')} size='sm'>\r\n              All\r\n            </Button>\r\n            <Button onClick={() => todoFilter(true)} size='sm'>\r\n              Open\r\n            </Button>\r\n            <Button onClick={() => todoFilter(false)} size='sm'>\r\n              Close\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n\r\n      {filter.map((item) => (\r\n        <div className={css.listItems} key={item.id}>\r\n          {edit === item.id ? (\r\n            <div>\r\n              <Form.Control\r\n                size='sm'\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className={item.status ? '' : css.close}>{item.title}</div>\r\n          )}\r\n          {edit === item.id ? (\r\n            <div>\r\n              <Button\r\n                variant='info'\r\n                className={css.btn}\r\n                onClick={() => saveTodo(item.id)}\r\n              >\r\n                <FontAwesomeIcon icon={faSave} />\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Button\r\n                variant='info'\r\n                className={css.btn}\r\n                onClick={() => deleteTodo(item.id)}\r\n              >\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n              </Button>\r\n              <Button\r\n                variant='info'\r\n                className={css.btn}\r\n                onClick={() => statusTodo(item.id)}\r\n              >\r\n                {item.status ? (\r\n                  <FontAwesomeIcon icon={faLockOpen} />\r\n                ) : (\r\n                  <FontAwesomeIcon icon={faLock} />\r\n                )}\r\n              </Button>\r\n              <Button\r\n                variant='info'\r\n                className={css.btn}\r\n                onClick={() => editTodo(item.id, item.title)}\r\n              >\r\n                <FontAwesomeIcon icon={faEdit} />\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './App.css';\nimport { AddTodo } from './components/addToDo/AddTodo';\nimport { Header } from './components/header/Header';\nimport { TodoList } from './components/ToDoList/TodoList';\n\nfunction App() {\n  const [todo, setTodo] = useState([]);\n  return (\n    <Container>\n      <Header />\n      <AddTodo todo={todo} setTodo={setTodo} />\n      <TodoList todo={todo} setTodo={setTodo} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"TodoList_btn__2d5LD\",\"listItems\":\"TodoList_listItems__3kdDK\",\"close\":\"TodoList_close__1a13I\",\"filter\":\"TodoList_filter__3RkcM\",\"btns\":\"TodoList_btns__1gOCZ\"};"],"sourceRoot":""}